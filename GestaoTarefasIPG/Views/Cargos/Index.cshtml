@model IEnumerable<GestaoTarefasIPG.Models.Cargo>

@{
    ViewData["Title"] = "Cargos";
}

<h1>Cargos</h1>

<div>

</div>

<table class="table" id="myTable">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.NomeCargo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NivelCargo)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.NomeCargo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NivelCargo)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.CargoID">Editar Cargo</a> |
                    <a asp-action="Delete" asp-route-id="@item.CargoID">Apagar Cargo</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<p>
    <a asp-controller="Cargos" asp-action="Create" class="btn btn-info">Criar Cargo</a> |
    <button class="btn btn-outline-secondary" onclick="sortTable()">Ordenar por nome</button>
</p>

<script>
    function sortTable() {
        var table, rows, switching, i, x, y, shouldSwitch;
        table = document.getElementById("myTable");
        switching = true;
        /*Make a loop that will continue until
        no switching has been done:*/
        while (switching) {
            //start by saying: no switching is done:
            switching = false;
            rows = table.rows;
            /*Loop through all table rows (except the
            first, which contains table headers):*/
            for (i = 1; i < (rows.length - 1); i++) {
                //start by saying there should be no switching:
                shouldSwitch = false;
                /*Get the two elements you want to compare,
                one from current row and one from the next:*/
                x = rows[i].getElementsByTagName("TD")[0];
                y = rows[i + 1].getElementsByTagName("TD")[0];
                //check if the two rows should switch place:
                if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                    //if so, mark as a switch and break the loop:
                    shouldSwitch = true;
                    break;
                }
            }
            if (shouldSwitch) {
                /*If a switch has been marked, make the switch
                and mark that a switch has been done:*/
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
            }
        }
    }
</script>